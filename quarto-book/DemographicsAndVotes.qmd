---
format:
  html:
    code-fold: true
    code-summary: "Show the code"
title: "Combining Demographic & Election data"
reference-location: margin
citation-location: margin
---

```{r, include=FALSE}
library(tidyverse)
library(gt)
library(broom)
library(gtsummary)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)

orig.wec <- read_csv(here::here("election-data/OriginalWEC_Pres-GOV_2012-2022_ReportingUnits.csv"))
```

Once we have demographic statistics *and* election statistics for the same geographic level, we can combine them to run various analyses.

Here is a simple example, calculating the relative performance of the Democratic candidate in gubernatorial and presidential election in City of Milwaukee wards. I present the results separately for wards where the majority of adults are Black, non-Hispanic white, Hispanic or Latino, etc.

# Retrieve election results

```{r, eval=FALSE}
library(tidyverse)
library(gt)
library(broom)
library(gtsummary)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)

orig.wec <- read_csv(here::here("election-data/OriginalWEC_Pres-GOV_2012-2022_ReportingUnits.csv"))
```

The elections file contains the official election results for each reporting unit in each election year. My analysis is limited to just the City of Milwaukee, where each reporting unit is one ward and wards stayed the same from 2012-2020. Their boundaries then changed to accomodate redistricting in 2022.

See the file `election-data/official-wec/CombineFiles.R` for a demonstration of how to clean and combine official WEC ward returns.

```{r}
# subset city of milwaukee wards
mke.ward.votes <- orig.wec %>%
  filter(county == "MILWAUKEE",
         str_detect(rep_unit, "CITY OF MILWAUKEE")) %>%
  mutate(ward = as.numeric(word(rep_unit, -1))) %>%
  select(ward, year, office, total, rep, dem)
mke.ward.votes
```

# Retrieve ward demographics

Next, I retrieve the ward statistics for voting age population by race/ethnicity. See the chapter on "Ward Demographics" for details about calculating this. There are two Milwaukee ward demographic files, one containing statistics for the 2011 ward vintage, and the other containing the 2022 ward vintage.

I combine the two into a single dataframe in long format. There is 1 row for each unique combination of ward, year, and demographic group. The following abbreviations are used:

* vap = voting age population
* aian = Alaska Native or Pacific Islander (non-Hispanic)
* asian = Asian (non-Hispanic)
* black = Black or African American (non-Hispanic)
* hisp = Hispanic or Latino (any race)
* white = white (non-Hispanic)
* other = other (non-Hispanic)
* two = 2 or more race (non-Hispanic)

```{r}
# city of milwaukee ward demographics, wards used from 2012-2020
mke.2011ward.demographics <- read_csv(here::here("data/ward-demographics/Wards2011_VAP_2010to2020.csv")) %>%
  filter(str_detect(ward_2011, "^Milwaukee - C")) %>%
  pivot_longer(cols = -c(1:2), names_to = "year", values_to = "count") %>%
  mutate(year = as.numeric(str_sub(year, -4, -1)),
         ward = as.numeric(word(ward_2011, -1))) %>%
  select(ward, year, group, count) %>%
  group_by(ward, year) %>%
  mutate(pct = (count/count[group == "vap"])*100) %>%
  ungroup()

# city of milwaukee ward demographics, wards used from 2022-
mke.2022ward.demographics <- read_csv(here::here("data/ward-demographics/Wards2022_VAP_2020.csv")) %>%
  filter(str_detect(ward_2022, "^Milwaukee - C")) %>%
  # set year to 2022, as this is the election year these wards apply to
  mutate(year = 2022,
         ward = as.numeric(word(ward_2022, -1))) %>%
  rename(count = count_2020) %>%
  select(ward, year, group, count) %>%
  group_by(ward, year) %>%
  mutate(pct = (count/count[group == "vap"])*100) %>%
  ungroup()

mke.combined.ward.demographics <- bind_rows(mke.2011ward.demographics,
                                            mke.2022ward.demographics) %>%
  arrange(ward, year, group)
mke.combined.ward.demographics
```

# calculate ward majority group

I then determine which group, if any, makes up at outright majority of the ward's voting age population in that year.

```{r}
mke.ward.majority <- mke.combined.ward.demographics %>%
  filter(group != "vap") %>%
  group_by(year, ward) %>%
  slice_max(order_by = count, n = 1, with_ties = F) %>%
  ungroup() %>%
  mutate(vap_majority = if_else(pct > 50,
                                true = word(group, -1, sep = "_"),
                                false = "no majority")) %>%
  select(ward, year, vap_majority)
mke.ward.majority
```

# aggregate election results by ward majority group

Then, I merge the ward majority dataframe with the election results dataframe, and aggregate the votes by majority group.

```{r}
mke.ward.majority.totals <- mke.ward.votes %>%
  inner_join(mke.ward.majority) %>%
  group_by(year, office, vap_majority) %>%
  summarise(wards = n(),
            across(.cols = where(is.numeric), .fns = sum)) %>%
  ungroup() %>%
  mutate(dem_pct_2pty = (dem/(rep + dem))*100) %>%
  filter(total > 0)
mke.ward.majority.totals
```

Finally, I use the {{gt}} package to create a nicely formatted table of results.

```{r}
#| column: page
mke.ward.majority.totals %>%
  mutate(office_year = paste(year, office)) %>%
  select(office_year, vap_majority, wards, dem_share = dem_pct_2pty) %>%
  pivot_wider(names_from = vap_majority, values_from = c(dem_share, wards),
              names_glue = "{vap_majority}:{.value}") %>%
  select(office_year, starts_with("black"), starts_with("white"), starts_with("hisp"),
         starts_with("no majority"), starts_with("asian")) %>%
  gt(rowname_col = "office_year") %>%
  tab_spanner_delim(":") %>%
  fmt_percent(columns = contains("dem_share"), decimals = 0, scale = F) %>%
  data_color(columns = contains("dem_share"), 
             domain = c(min(mke.ward.majority.totals$dem_pct_2pty),
                        max(mke.ward.majority.totals$dem_pct_2pty)),
             palette = "Blues") %>%
  tab_header(title = "Election results in City of Milwaukee wards",
             subtitle = "by the racial/ethnic majority group of adults in each ward") %>%
  tab_footnote("Democratic candidate's share of the two-party vote",
               locations = cells_column_labels(contains("dem_share"))) %>%
  tab_footnote("2012-2018 ward population statistics are linearly interpolated using 2010 and 2020 census data. 2020 and 2022 statistics both use 2020 census data.",
               locations = cells_column_labels(contains("wards"))) %>%
  tab_footnote("The wards used in 2022 were different than the wards used from 2012-2020.",
               locations = cells_stub(rows = 6))
```

# linear regression

Extrapolating individual voter behavior from the table above risks committing the [ecological fallacy](https://en.wikipedia.org/wiki/Ecological_fallacy). To better measure how demographics correlate with election results, I construct a regression model.

Overall, the model confirms the correlations revealed in the simple ward majority table. Keep reading for more details.

First, I prepare the data, so that I am left with 1 row per ward in each election. I have variables for the total number of voters, the Democratic candidate's share of the 2-party vote, and the proportion of adults made up by each race. I create a combined `other` category containing all adults who aren't Black, white, Hispanic/Latino, or Asian. I also add dummy variables for each election year beginning in 2014.

```{r}
wards.votes.vap.pct <- mke.combined.ward.demographics %>%
  select(-pct) %>%
  pivot_wider(names_from = group, values_from = count) %>%
  mutate(vap_other2 = vap_other + vap_two + vap_aian + vap_nhpi) %>%
  inner_join(mke.ward.votes) %>%
  select(ward, year, office, total, dem, rep, vap, vap_black, vap_white,
         vap_hisp, vap_asian, vap_other2) %>%
  # calculate percentages
  mutate(total_2party = dem + rep,
         pdem = (dem/total_2party)*100,
         pvap_black = (vap_black/vap)*100,
         pvap_white = (vap_white/vap)*100,
         pvap_hisp = (vap_hisp/vap)*100,
         pvap_asian = (vap_asian/vap)*100,
         pvap_other2 = (vap_other2/vap)*100) %>%
  select(ward, year, office, total_2party, vap, starts_with("p")) %>%
  # add dummy variables for each election, 2014-2022
  mutate(x2014 = if_else(year == 2014, 1, 0),
         x2016 = if_else(year == 2016, 1, 0),
         x2018 = if_else(year == 2018, 1, 0),
         x2020 = if_else(year == 2020, 1, 0),
         x2022 = if_else(year == 2022, 1, 0)) %>%
  # remove ward-years with either no votes or no adults
  filter(!is.na(pdem),
         vap > 0)
glimpse(wards.votes.vap.pct)
```


I then create a regression model using this formula. The independent variable is the Democratic candidate's share of the two-party vote. The regressors are the Black, Hispanic, Asian, and other adult population shares, each matched with an interaction term for the 2014, 2016, 2018, 2020, and 2022 elections. Each ward is weighted by the number of adults living in it.

$lm(pdem ~ pvap_black*x2014 + pvap_black*x2016 + pvap_black*x2018 + pvap_black*x2020 + pvap_black*x2022 +
pvap_hisp*x2014 + pvap_hisp*x2016 + pvap_hisp*x2018 + pvap_hisp*x2020 + pvap_hisp*x2022 +
pvap_asian*x2014 + pvap_asian*x2016 + pvap_asian*x2018 + pvap_asian*x2020 + pvap_asian*x2022 +
pvap_other2*x2014 + pvap_other2*x2016 + pvap_other2*x2018 + pvap_other2*x2020 + pvap_other2*x2022,
weights = vap)

```{r}
pvap.lm <- lm(pdem ~ pvap_black*x2014 + pvap_black*x2016 + pvap_black*x2018 + pvap_black*x2020 + pvap_black*x2022 +
     pvap_hisp*x2014 + pvap_hisp*x2016 + pvap_hisp*x2018 + pvap_hisp*x2020 + pvap_hisp*x2022 +
     pvap_asian*x2014 + pvap_asian*x2016 + pvap_asian*x2018 + pvap_asian*x2020 + pvap_asian*x2022 +
     pvap_other2*x2014 + pvap_other2*x2016 + pvap_other2*x2018 + pvap_other2*x2020 + pvap_other2*x2022,
   data = wards.votes.vap.pct, weights = vap)
```

Here's how to interpret the results. The intercept is a ward in the **2012 presidential election** where 100% of adults are (non-Hispanic) white. The model predicts that this ward would've given Barack Obama 49% of the two-party vote. For every additional 1 percentage point increase in the Black share of the population, the model predicts the Democratic vote share to grow by 0.46 points; for every 1 point increase in the Latino share, a 0.37 point increase; and for every 1 point increase in the Asian share, a 0.30 point increase.

In the **2014 gubernatorial race** the results are not significantly different from 2012 for changes in the white, Black, Latino, and Asian population.

Changes are statistically significant in **the 2016 presidential race**. Relative to 2012, the predicted Democratic vote share in an entirely white ward grows by 8.2 percentage points. Every one point increase in the Black share of the population correlates with a slight (though statistically significant) 0.07 percentage point decrease in Democratic support, relative to 2012. For a one point in crease in the Latino population share, the Democratic share decreases by 0.13 points.

The next elections show a continuation of this trend. Relative to each group's pattern in 2012, Democratic support increases among white adults and decreases among Black and Latino adults.

Here are the statistics for the **2022 presidential race**, relative to 2012. In a hypothetically entirely white ward, the Democratic share grows by 21 percentage points. The increase in Democratic support for every 1-point increase in the Black population slips by 0.18 percentage points. It drops by 0.28 points for each 1-point increase in the Latino population. Margins of error are larger among the smaller Asian population, but the model even finds a statistically significant drop in Democratic support here.

```{r}
#| fig-cap: predicted vs. residuals
#| column: margin

tibble(predicted = predict(pvap.lm),
       residuals = residuals(pvap.lm),
       vap = pvap.lm$model$`(weights)`) %>%
  ggplot(aes(predicted, residuals, size = vap)) +
  geom_point(alpha = 0.25) +
  theme(legend.position = c(0.25, 0.25))
```

```{r}
tbl_regression(pvap.lm, intercept = T) %>%
 add_glance_source_note(
    include = everything(),
    text_interpret = c("md", "html"),
    sep1 = " = ",
    sep2 = "; "
  )
```

These plots visualize the changing coefficients in Democratic support for each 1-point increase in the Asian, Black, and Latino populations, relative to 2012.

```{r}
broom::tidy(pvap.lm, conf.int = T) %>% filter(str_detect(term, "x2"),
                        str_detect(term, ":")) %>%
  mutate(race = str_extract(term, "pvap.*:|pvap.*$"),
         year = str_extract(term, "x.*:|x.*$"),
         race = str_remove(race, ":"),
         year = str_remove(year, ":")) %>%
  filter(race != "pvap_other2") %>%
  ggplot() +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_pointrange(aes(x = year, y = estimate, ymin = conf.low, ymax = conf.high)) +
  facet_wrap(facets = ~race) +
  theme_bw()
```
